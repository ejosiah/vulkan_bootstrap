#version 460
#extension GL_EXT_scalar_block_layout : enable

#include "common.glsl"

layout(local_size_x = 1024) in;

layout(set = 0, binding = 0) buffer Points{
    vec4 pointsIn[];
};

layout(set = 0, binding = 1, scalar) buffer PData{
    ParticleData dataIn[];
};

layout(push_constant) uniform Constants {
    int numParticles;
    float eosExponent;
    float targetDensity;
    float speedOfSound;
    float negativePressureScale;
};

void main(){

    uvec3 id = gl_GlobalInvocationID;
    uvec3 size = gl_WorkGroupSize * gl_NumWorkGroups;
    uint index = (id.z * size.y + id.y) * size.x + id.x;

    if(index >= numParticles) return;

    ParticleData data = dataIn[index];
    float density = data.density;

    float eosScale = targetDensity * speedOfSound * speedOfSound;
    float pressure = eosScale / eosExponent * (pow(density / targetDensity, eosExponent ) - 1);

    if(pressure < 0 ){
        pressure *= negativePressureScale;
    }

    dataIn[index].pressure = pressure;

}