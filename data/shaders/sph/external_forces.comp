#version 460
#extension GL_EXT_scalar_block_layout : enable

#include "common.glsl"
#include "point_generator.glsl"
#include "..\sampling.glsl"
#include "..\hash.glsl"

layout(local_size_x = 1024) in;

layout(set = 0, binding = 0) buffer Points{
    vec4 pointsIn[];
};

layout(set = 0, binding = 1, scalar) buffer PData{
    ParticleData dataIn[];
};

layout(set = 1, binding = 0, scalar) buffer Forces{
    vec3 forces[];
};

//layout(set = 1, binding = 1) uniform sampler3D wind;

layout(push_constant) uniform Constants{
    layout(offset = 0)
    vec3 gravity;
    uint numParticles;
    float drag;
    float time;
    float invMass;
};

void main(){
    uvec3 id = gl_GlobalInvocationID;
    uvec3 size = gl_WorkGroupSize * gl_NumWorkGroups;
    uint index = (id.z * size.y + id.y) * size.x + id.x;

    if(index >= numParticles) return;

    ParticleData data = dataIn[index];
    vec3 velocity = data.velocity;
    vec3 force = gravity * (1.0/invMass);
//    force += -drag * (velocity - vec3(0)); // TODO replace with wind vector field
    forces[index] = force;
}