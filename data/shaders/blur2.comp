#version 460

layout(local_size_x = 5, local_size_y = 5, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform sampler2D iImage;
layout(set = 1, binding = 0, rgba32f) writeonly uniform image2D oImage;

layout(push_constant) uniform CONTANTS{
    float weights[25];
    int horizontal;
};

shared vec3 results[25];

void main(){
    vec2 uv = vec2(gl_WorkGroupID)/vec2(gl_NumWorkGroups.xy - uvec2(1));
    vec2 offset = vec2(1)/(vec2(gl_NumWorkGroups/gl_WorkGroupSize));
    vec2 t = vec2(gl_LocalInvocationID)/vec2(gl_WorkGroupSize.xy - uvec2(1));
    offset *= mix(vec2(-2), vec2(2), t);
    vec2 coord = uv + offset;

    int i = int(gl_LocalInvocationIndex);
    results[i] = texture(iImage, coord).rgb * weights[i];

    barrier();
    // TODO use prefix scan
    if(i == 0){
        vec3 result = vec3(0);
        for(int i = 0; i < 25; i++){
            result += results[i];
        }
        imageStore(oImage, ivec2(gl_WorkGroupID), vec4(result, 1));
    }

}