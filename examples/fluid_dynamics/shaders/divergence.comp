#version 450
#define IX(i, j) ((i)*(N+2)+(j))

layout(local_size_x = 32, local_size_y = 32) in;

layout(set = 0, binding = 0) buffer VelocityHorizontalComp {
    float u[];
};

layout(set = 0, binding = 1) buffer VelocityVerticalComp {
    float v[];
};

layout(set = 1, binding = 0) buffer Divergence{
    float div[];
};

layout(push_constant) uniform Constants{
    int N;
};

void main(){
    if(gl_GlobalInvocationID.x >= N || gl_GlobalInvocationID.y >= N){
        return;
    }

    int i = int(gl_GlobalInvocationID.y + 1);
    int j = int(gl_GlobalInvocationID.x + 1);

    float dudx =  0.5 * N * (u[IX(i, j+1)] - u[IX(i, j-1)]);
    float dudy =  0.5 * N * (v[IX(i+1, j)] - v[IX(i-1, j)]);
    div[IX(i, j)] = dudx + dudy;
}