#version 450
#extension GL_EXT_shader_atomic_float2 : require
#define IX(i, j) (int(i)+(N+(IndexOffset * 2))*int(j))

layout(constant_id = 0) const int IndexOffset = 0;

layout(local_size_x = 32, local_size_y = 32) in;

layout(set = 0, binding = 0) buffer ScalaField{
    float s[];
};

layout(set = 0, binding = 0) buffer MaxMagnitude {
    float m;
};

layout(set = 1, binding = 0) buffer GradientHorizontalComp {
    float u[];
};

layout(set = 1, binding = 1) buffer GradientVerticalComp {
    float v[];
};

layout(push_constant) uniform Constants {
    int N;
};

void main(){
    int i = int(gl_GlobalInvocationID.y + IndexOffset);
    int j = int(gl_GlobalInvocationID.x + IndexOffset);

    float dx = 1/float(N);
    float dy = dx;

    float dsdx = (s[IX(i+1, j)] - s[IX(i-1, j)]) / (2 * dx);
    float dsdy = (s[IX(i, j+1)] - s[IX(i, j-1)]) / (2 * dy);

    vec2 g = vec2(dsdx, dsdy);
    float mag = length(g);
    atomicMax(m, mag);

    u[IX(i, j)] = dsdx;
    v[IX(i, j)] = dsdy;
}