#version 450

layout(local_size_x = 32, local_size_y = 32) in;

layout(set = 0, binding = 0) buffer Unknown {
    float x[];
};

layout(set = 1, binding = 0) buffer Solution_B {
    float b[];
};

layout(push_constant) uniform Constants {
    int N;
    float alpha;
    float rBeta;
};

float X(int i, int j){
    int index = i * (N+2) + j;
    return x[index];
}

float B(int i, int j){
    int index = i * (N+2) + j;
    return b[index];
}

void main(){
    if(gl_GlobalInvocationID.x >= N || gl_GlobalInvocationID.y >= N){
        return;
    }

    int i = int(gl_GlobalInvocationID.y) + 1;
    int j = int(gl_GlobalInvocationID.x) + 1;

    int index = i * (N+2) + j;
    x[index] = (X(i+1, j) + X(i-1, j) + X(i, j+1) + X(i, j-1) + alpha * B(i, j)) * rBeta;
}