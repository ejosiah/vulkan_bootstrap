#version 450

layout(local_size_x_id = 0, local_size_y_id = 1) in;

layout(set = 0, binding = 0) buffer CURRENT_X {
    float x0[];
};

layout(set = 1, binding = 0) buffer NEW_X {
    float x[];
};

layout(set = 0, binding = 1) buffer Solution_B {
    float b[];
};

layout(push_constant) uniform Constants {
    float alpha;
    float rBeta;
    int N;
};

float X(int i, int j){
    int index = i + (N+2) * j;
    return x0[index];
}

float B(int i, int j){
    int index = i + (N+2) * j;
    return b[index];
}

void main(){
    int i = int(gl_GlobalInvocationID.x) + 1;
    int j = int(gl_GlobalInvocationID.y) + 1;

    int index = i + (N+2) * j;
    x[index] = X(i+1, j) + X(i-1, j) + X(i, j+1) + X(i, j-1) + alpha * B(i, j) * rBeta;

}